const { SlashCommandBuilder, PermissionFlagsBits, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js')
const { QuickDB } = require(`quick.db`)
let memes = require(`../functions/memes.js`)
const db = new QuickDB()
const exist = require('../functions/multValue.js')

module.exports = {
    data: new SlashCommandBuilder()
        .setName('preferences')
        .setDescription('–ó–º—ñ–Ω—é—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞ —â–æ–¥–æ —Å–µ—Ä–≤–µ—Ä–∞.')
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
        .addSubcommand(subcommand => 
            subcommand
            .setName("vclobby")
            .setDescription(`–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∫–∞–Ω–∞–ª –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –≥–æ–ª–æ—Å–æ–≤–∏—Ö –∫–∞–Ω–∞–ª—ñ–≤. (–ù–µ –≤–∫–∞–∑–∞–Ω–æ - –≤–∏–¥–∞–ª–∏—Ç–∏.)`)
            .addChannelOption(option => option.setName(`lobby`).setDescription(`–ì–æ–ª–æ—Å–æ–≤–∏–π –∫–∞–Ω–∞–ª`))  
        )
        .addSubcommandGroup(group => 
            group
            .setName(`log`)
            .setDescription(`–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –±–æ—Ç–æ–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—Ä–æ –ø–æ–¥—ñ—ó –≤ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –∫–∞–Ω–∞–ª`)
            .addSubcommand(subcommand => 
                subcommand
                .setName(`channel`)
                .setDescription(`–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –∫–∞–Ω–∞–ª –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å`)    
                .addChannelOption(option => option.setName(`channel`).setDescription(`–¢–µ–∫—Å—Ç–æ–≤–∏–π –∫–∞–Ω–∞–ª`).setRequired(true))
            )
            .addSubcommand(subcommand => 
                subcommand
                .setName(`switch`)
                .setDescription(`–ü–µ—Ä–µ–º–∏–∫–∞—á—ñ —Ç–∏–ø—ñ–≤ –ø–æ–¥—ñ–π`)    
            )
            )
        .addSubcommandGroup(group => 
            group
            .setName(`counter`)
            .setDescription(`–õ—ñ—á–∏–ª—å–Ω–∏–∫ —É—á–∞—Å–Ω–∏–∫—ñ–≤`)
            .addSubcommand(subcommand => 
                subcommand
                .setName(`set`)
                .setDescription(`–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫`)    
                .addChannelOption(option => option.setName(`channel`).setDescription(`–ì–æ–ª–æ—Å–æ–≤–∏–π –∫–∞–Ω–∞–ª / –ö–∞—Ç–µ–≥–æ—Ä—ñ—è`).setRequired(true))
                .addStringOption(option => option.setName(`name`).setDescription(`–ù–∞–∑–≤–∞ –ª—ñ—á–∏–ª—å–Ω–∏–∫—É (–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)`))
            )
            .addSubcommand(subcommand => 
                subcommand
                .setName(`remove`)
                .setDescription(`–í–∏–¥–∞–ª–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫`)    
            )
        ),
    async execute(interaction) {
        if(!interaction.options.getSubcommandGroup()){
            if(interaction.options.getSubcommand() === `vclobby`){
                let lobbies = db.table("lobbies")
                let channel = interaction.options.getChannel("lobby")
                if(!channel){
                    await lobbies.delete(interaction.guild.id)
                    let embed = new EmbedBuilder()
                    .setAuthor({ name: `–õ–æ–±–±—ñ –≤–∏–¥–∞–ª–µ–Ω–æ!`, url: require(`../functions/memes.js`)(1) })
                    .setColor('Orange')
                    .setDescription(`–£—á–∞—Å–Ω–∏–∫–∏ –±—ñ–ª—å—à–µ –Ω–µ –∑–º–æ–∂—É—Ç—å —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—ñ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≥–æ–ª–æ—Å–æ–≤—ñ –∫–∞–Ω–∞–ª–∏.`)
                    .setFooter({ text: '–î–æ–±–∞–≤–∏—Ç–∏: /preferences vclobby [lobby]' })
                    return await interaction.reply({embeds: [embed], ephemeral: true})
                }else{
                    if(channel.type !== 2) return await interaction.reply({ embeds: [{ author: { name: '–õ–æ–±–±—ñ –º–æ–∂–Ω–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –≤ —è–∫–æ—Å—Ç—ñ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É.' }, color: 0xcc2929 }], ephemeral: true })

                    await lobbies.set(interaction.guild.id, channel.id)
                    let embed = new EmbedBuilder()
                    .setAuthor({ name: `–õ–æ–±–±—ñ –¥–æ–±–∞–≤–ª–µ–Ω–æ/–∑–º—ñ–Ω–µ–Ω–æ!`, url: require(`../functions/memes.js`)(1) })
                    .setColor('Green')
                    .setDescription('–¢–µ–ø–µ—Ä —É—á–∞—Å–Ω–∏–∫–∏ –º–æ–∂—É—Ç—å —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≥–æ–ª–æ—Å–æ–≤—ñ –∫–∞–Ω–∞–ª–∏, –∑–∞—Ö–æ–¥—è—á–∏ –≤ –∫–∞–Ω–∞–ª –∞–±–æ –ø—Ä–æ–ø–∏—Å—É—é—á–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –∫–æ–º–∞–Ω–¥—É.')
                    .setFooter({ text: `–ö–∞–Ω–∞–ª: ${channel.name}` })
                    return await interaction.reply({embeds: [embed], ephemeral: true})
                }
            }
        }

        if(interaction.options.getSubcommandGroup() === `counter`){
            const counters = db.table("counters")

            if(interaction.options.getSubcommand() === `remove`){
                let channel = await interaction.guild.channels.fetch(await counters.get(interaction.guild.id)).name
                await counters.delete(interaction.guild.id)
                let embed = new EmbedBuilder()
                .setColor(`Orange`)
                .setAuthor({ name: `–õ—ñ—á–∏–ª—å–Ω–∏–∫ –≤–∏–¥–∞–ª–µ–Ω–æ.`, url: memes(1) })
                .setFooter({ text: `–í–∏ –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –π–æ–≥–æ –≤ –±—É–¥—å —è–∫–∏–π –º–æ–º–µ–Ω—Ç!` })
                await interaction.reply({ embeds: [embed], ephemeral: true })
            }else{
                let channel = interaction.options.getChannel('channel');
                if(![2,4].includes(channel.type)) return await interaction.reply(`–õ—ñ—á–∏–ª—å–Ω–∏–∫ –º–æ–∂–Ω–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∏–π –∫–∞–Ω–∞–ª –∞–±–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é`)
                if(await counters.get(interaction.guild.id)) await counters.delete(interaction.guild.id)
                await counters.set(`${interaction.guild.id}`, { id: channel.id, name: interaction.options.getString(`name`) || `–£—á–∞—Å–Ω–∏–∫–∏: ON/ALL` })

                let embed = new EmbedBuilder()
                .setColor(`Green`)
                .setAuthor({ name: `–õ—ñ—á–∏–ª—å–Ω–∏–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!`, url: memes(1) })
                .addFields(
                    {
                        name: `–ö–∞–Ω–∞–ª`,
                        value: `${channel}`
                    },
                    {
                        name: `–ù–∞–∑–≤–∞`,
                        value: `\`${interaction.options.getString(`name`) || `–£—á–∞—Å–Ω–∏–∫–∏: ON/ALL`}\``
                    }
                )
                .setFooter({ text: `–õ—ñ—á–∏–ª—å–Ω–∏–∫ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω (–û–±–º–µ–∂–µ–Ω–Ω—è API)` })
                await interaction.reply({ embeds: [embed], ephemeral: true })
            }
        }
        
        if(interaction.options.getSubcommandGroup() === `log`){
            const logs = db.table(`logs`);
            if(interaction.options.getSubcommand() === `channel`){
                let channel = interaction.options.getChannel('channel');
                await logs.set(interaction.guild.id + `.channel`, channel.id)
                let embed = new EmbedBuilder()
                .setColor(`Green`)
                .setAuthor({ name: `–ö–∞–Ω–∞–ª –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!`, url: memes(1) })
                .setDescription(`**${channel}** –±—É–≤ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —è–∫ –∫–∞–Ω–∞–ª –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å –ø—Ä–æ –ø–æ–¥—ñ—ó!`)
                await interaction.reply({ embeds: [embed], ephemeral: true })
            }
            if(interaction.options.getSubcommand() === 'switch'){

                const types = {
                    'sw_bans': ['banAdd', 'banRemove'],
                    'sw_msgs': ['msgEdit', 'msgDelete'],
                    'sw_members': ['memAdd', 'memRemove', 'memUpdate']
                }
                
                const sws = await logs.get(`${interaction.guild.id}.types`)

                const msg = new ButtonBuilder()
                .setCustomId('sw_msgs')
                .setLabel('–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–æ/–∑–º—ñ–Ω–µ–Ω–æ')
                if(exist(sws, types['sw_msgs'])) msg.setStyle(ButtonStyle.Success)
                else msg.setStyle(ButtonStyle.Danger)

                const ban = new ButtonBuilder()
                .setCustomId('sw_bans')
                .setLabel('–ë–ª–æ–∫—É–≤–∞–Ω–Ω—è/–†–æ–∑–±–ª—É–∫—É–≤–∞–Ω–Ω—è')
                if(exist(sws, types['sw_bans'])) ban.setStyle(ButtonStyle.Success)
                else ban.setStyle(ButtonStyle.Danger)

                const mem = new ButtonBuilder()
                .setCustomId('sw_members')
                .setLabel('–ó–º—ñ–Ω–∞ —É—á–∞—Å–Ω–∏–∫–∞ (–ù—ñ–∫–Ω–µ–π–º/–†–æ–ª—å)')
                if(exist(sws, types['sw_members'])) mem.setStyle(ButtonStyle.Success)
                else mem.setStyle(ButtonStyle.Danger)

                const row = new ActionRowBuilder().addComponents([msg, ban, mem])
                const log = await logs.get(`${interaction.guild.id}.channel`)
                
                const embed = new EmbedBuilder()
                .setAuthor({ name: `–ü–µ—Ä–µ–º–∏–∫–∞—á—ñ —Ç–∏–ø—ñ–≤ –ø–æ–¥—ñ–π!`, iconURL: interaction.guild.iconURL() })
                .setDescription(`–ó–µ–ª–µ–Ω–∏–π –∫–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ [üü©] - –ø–æ–¥—ñ—è **—É–≤—ñ–º–∫–Ω–µ–Ω–∞**.\n–ß–µ—Ä–≤–æ–Ω–∏–π –∫–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ [üü•] - –ø–æ–¥—ñ—è **–≤–∏–º–∫–Ω–µ–Ω–∞**.\n`)
                .addFields([
                    { name: `–ö–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥—ñ–π`, value: `${interaction.guild.channels.cache.get(log) || `–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –π–æ–≥–æ —á–µ—Ä–µ–∑ **/preferences logs channel**`}` }
                ])
                .setFooter({ text: `–ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É —É–≤—ñ–º–∫–Ω–µ –∞–±–æ –≤–∏–º–∫–Ω–µ —Ç–∏–ø –ø–æ–¥—ñ—ó` })
                .setColor(`White`)
                await interaction.reply({ embeds: [embed], components: [row], ephemeral: true })
            }
        }
    }
}